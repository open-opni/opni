syntax = "proto3";

package representation;

import "github.com/open-panoptes/opni/pkg/apis/core/v1/core.proto";
import "google/api/annotations.proto";
import "google/api/http.proto";
import "google/protobuf/empty.proto";

option go_package = "github.com/open-panoptes/opni/plugins/topology/apis/representation";

service TopologyRepresentation {
  // opni internal use
  rpc GetGraph(core.Reference) returns (TopologyGraph);

  // cluster id  --> kubernetes graph SVG
  rpc RenderGraph(core.Reference) returns (DOTRepresentation) {
    option (google.api.http) = {
      post: "/topology/render"
      body: "*"
    };
  }
}

message TopologyGraph {
  core.Reference id   = 1;
  bytes          data = 2;
  GraphRepr      repr = 3;
}

enum GraphRepr {
  None         = 0;
  KubectlGraph = 1;
}

message DOTRepresentation {
  string rawDotFormat = 1;
}
