syntax = "proto3";

package control;

import "github.com/kralicky/totem/extensions.proto";
import "github.com/open-panoptes/opni/pkg/apis/core/v1/core.proto";
import "google/protobuf/empty.proto";

option go_package = "github.com/open-panoptes/opni/pkg/apis/control/v1";

service Health {
  rpc GetHealth(google.protobuf.Empty) returns (core.Health);
}

service HealthListener {
  rpc UpdateHealth(core.Health) returns (google.protobuf.Empty);
}

service UpdateSync {
  rpc SyncManifest(UpdateManifest) returns (SyncResults);
}

enum PatchOp {
  // revisions match
  None = 0;
  // same plugin exists on both
  Update = 1;
  // missing plugin on agent
  Create = 2;
  // outdated plugin on agent, with no version on the gateway
  Remove = 3;
  // same plugin contents and module name, but the file name is different
  Rename = 4;
}

message SyncResults {
  PatchList requiredPatches = 2;
}

message UpdateManifestEntry {
  string package = 1;
  string path    = 2;
  string digest  = 3;
}

message UpdateManifest {
  repeated UpdateManifestEntry items = 1;
}

message PluginArchiveEntry {
  UpdateManifestEntry metadata = 1;
  bytes               data     = 2;
}

message PluginArchive {
  repeated PluginArchiveEntry items = 1;
}

// opPath should be empty when op == PatchRename
// bytes should be empty when op == PatchRemove
message PatchSpec {
  string  package   = 1;
  PatchOp op        = 2;
  bytes   data      = 3;
  string  path      = 4;
  string  oldDigest = 5;
  string  newDigest = 6;
}

message PatchList {
  repeated PatchSpec items = 1;
}
